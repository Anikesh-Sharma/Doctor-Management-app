{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anike/Desktop/Placements/DoctorManagement/doctor-appointment-app/src/app/dashboard/page.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { useSearchParams } from \"next/navigation\";\r\nimport Dashboard from \"@/app/_components/Dashboard\";\r\n\r\nexport default function DashboardPage() {\r\n  const searchParams = useSearchParams();\r\n  const userType = searchParams.get(\"userType\") || \"patient\";\r\n\r\n  // Simulated appointment data; replace with your API or localStorage data as needed.\r\n  const appointments =\r\n    userType === \"doctor\"\r\n      ? [\r\n          {\r\n            id: 1,\r\n            date: new Date(\"2025-03-15T09:00:00\"),\r\n            time: \"09:00 AM\",\r\n            doctorName: \"Dr. John Doe\",\r\n            title: \"Appointment with Patient A\",\r\n            patientName: \"Alice Johnson\",\r\n            status: \"confirmed\"\r\n          },\r\n          {\r\n            id: 2,\r\n            date: new Date(\"2025-03-20T11:00:00\"),\r\n            time: \"11:00 AM\",\r\n            doctorName: \"Dr. John Doe\",\r\n            title: \"Appointment with Patient B\",\r\n            patientName: \"Bob Smith\",\r\n            status: \"confirmed\"\r\n          },\r\n          {\r\n            id: 3,\r\n            date: new Date(new Date().setHours(14, 30, 0, 0)),\r\n            time: \"02:30 PM\",\r\n            doctorName: \"Dr. John Doe\",\r\n            title: \"Urgent Consultation\",\r\n            patientName: \"Charlie Brown\",\r\n            status: \"pending\"\r\n          },\r\n        ]\r\n      : [\r\n          {\r\n            id: 1,\r\n            date: new Date(\"2025-03-12T10:00:00\"),\r\n            time: \"10:00 AM\",\r\n            doctorName: \"Dr. Jane Smith\",\r\n            title: \"Consultation with Dr. Jane Smith\",\r\n            type: \"check-up\",\r\n            status: \"confirmed\"\r\n          },\r\n          {\r\n            id: 2,\r\n            date: new Date(\"2025-03-18T14:00:00\"),\r\n            time: \"02:00 PM\",\r\n            doctorName: \"Dr. Mark Brown\",\r\n            title: \"Follow-up with Dr. Mark Brown\",\r\n            type: \"follow-up\",\r\n            status: \"confirmed\"\r\n          },\r\n          {\r\n            id: 3,\r\n            date: new Date(new Date().setHours(15, 0, 0, 0)),\r\n            time: \"03:00 PM\",\r\n            doctorName: \"Dr. Jane Smith\",\r\n            title: \"Annual Physical\",\r\n            type: \"physical\",\r\n            status: \"pending\"\r\n          },\r\n        ];\r\n\r\n  return <Dashboard appointments={appointments} userType={userType} />;\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,WAAW,aAAa,GAAG,CAAC,eAAe;IAEjD,oFAAoF;IACpF,MAAM,eACJ,aAAa,WACT;QACE;YACE,IAAI;YACJ,MAAM,IAAI,KAAK;YACf,MAAM;YACN,YAAY;YACZ,OAAO;YACP,aAAa;YACb,QAAQ;QACV;QACA;YACE,IAAI;YACJ,MAAM,IAAI,KAAK;YACf,MAAM;YACN,YAAY;YACZ,OAAO;YACP,aAAa;YACb,QAAQ;QACV;QACA;YACE,IAAI;YACJ,MAAM,IAAI,KAAK,IAAI,OAAO,QAAQ,CAAC,IAAI,IAAI,GAAG;YAC9C,MAAM;YACN,YAAY;YACZ,OAAO;YACP,aAAa;YACb,QAAQ;QACV;KACD,GACD;QACE;YACE,IAAI;YACJ,MAAM,IAAI,KAAK;YACf,MAAM;YACN,YAAY;YACZ,OAAO;YACP,MAAM;YACN,QAAQ;QACV;QACA;YACE,IAAI;YACJ,MAAM,IAAI,KAAK;YACf,MAAM;YACN,YAAY;YACZ,OAAO;YACP,MAAM;YACN,QAAQ;QACV;QACA;YACE,IAAI;YACJ,MAAM,IAAI,KAAK,IAAI,OAAO,QAAQ,CAAC,IAAI,GAAG,GAAG;YAC7C,MAAM;YACN,YAAY;YACZ,OAAO;YACP,MAAM;YACN,QAAQ;QACV;KACD;IAEP,qBAAO,8OAAC,uIAAA,CAAA,UAAS;QAAC,cAAc;QAAc,UAAU;;;;;;AAC1D","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}