{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anike/Desktop/Placements/DoctorManagement/doctor-appointment-app/src/app/_components/DoctorData.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, createContext, useContext, useReducer } from 'react';\r\nimport { Search, MapPin, Star, Calendar, ChevronLeft, ChevronRight, Filter, Clock, Award, Users } from 'lucide-react';\r\nimport doctorsData from '../data.json';\r\n\r\n// Create context for doctors data\r\nconst DoctorsContext = createContext();\r\n\r\n// Action types\r\nconst ACTIONS = {\r\n  INITIALIZE: 'initialize',\r\n  FILTER_DOCTORS: 'filter_doctors',\r\n  SET_SEARCH: 'set_search',\r\n  SET_SPECIALTY: 'set_specialty',\r\n  SET_TODAY_ONLY: 'set_today_only',\r\n  SET_PAGE: 'set_page'\r\n};\r\n\r\n// Reducer function for doctors state\r\nconst doctorsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.INITIALIZE:\r\n      return {\r\n        ...state,\r\n        allDoctors: action.payload,\r\n        filteredDoctors: action.payload,\r\n        specialties: ['All', ...new Set(action.payload.map(doctor => doctor.specialization))]\r\n      };\r\n    case ACTIONS.FILTER_DOCTORS:\r\n      const filteredDocs = state.allDoctors.filter(doctor => {\r\n        const matchesSearch = doctor.name.toLowerCase().includes(state.searchTerm.toLowerCase()) ||\r\n                             doctor.specialization.toLowerCase().includes(state.searchTerm.toLowerCase());\r\n        const matchesSpecialty = state.selectedSpecialty === 'All' || doctor.specialization === state.selectedSpecialty;\r\n        const matchesAvailability = !state.todayOnly || isAvailableToday(doctor.availability);\r\n        return matchesSearch && matchesSpecialty && matchesAvailability;\r\n      });\r\n      \r\n      return {\r\n        ...state,\r\n        filteredDoctors: filteredDocs,\r\n        currentPage: 1,\r\n        totalPages: Math.ceil(filteredDocs.length / state.doctorsPerPage)\r\n      };\r\n    case ACTIONS.SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        searchTerm: action.payload\r\n      };\r\n    case ACTIONS.SET_SPECIALTY:\r\n      return {\r\n        ...state,\r\n        selectedSpecialty: action.payload\r\n      };\r\n    case ACTIONS.SET_TODAY_ONLY:\r\n      return {\r\n        ...state,\r\n        todayOnly: action.payload\r\n      };\r\n    case ACTIONS.SET_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Helper functions\r\nconst isAvailableToday = (availabilityArray) => {\r\n  if (!availabilityArray || !Array.isArray(availabilityArray) || availabilityArray.length === 0) {\r\n    return false;\r\n  }\r\n  \r\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  const today = days[new Date().getDay()];\r\n  \r\n  return availabilityArray.some(slot => slot.day === today);\r\n};\r\n\r\nconst getAvailabilityText = (availability) => {\r\n  if (!availability || !Array.isArray(availability) || availability.length === 0) {\r\n    return \"No availability information\";\r\n  }\r\n  \r\n  return availability.map(slot => `${slot.day}s: ${slot.startTime}-${slot.endTime}`).join(', ');\r\n};\r\n\r\n// Provider component\r\nconst DoctorsProvider = ({ children }) => {\r\n  const initialState = {\r\n    allDoctors: [],\r\n    filteredDoctors: [],\r\n    specialties: ['All'],\r\n    searchTerm: '',\r\n    selectedSpecialty: 'All',\r\n    todayOnly: false,\r\n    currentPage: 1,\r\n    doctorsPerPage: 9,\r\n    totalPages: 0\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(doctorsReducer, initialState);\r\n\r\n  // Initialize data from JSON\r\n  useEffect(() => {\r\n    dispatch({ type: ACTIONS.INITIALIZE, payload: doctorsData.doctors });\r\n    dispatch({ type: ACTIONS.FILTER_DOCTORS });\r\n  }, []);\r\n\r\n  // Apply filters when filter criteria change\r\n  useEffect(() => {\r\n    dispatch({ type: ACTIONS.FILTER_DOCTORS });\r\n  }, [state.searchTerm, state.selectedSpecialty, state.todayOnly]);\r\n\r\n  // Actions for state updates\r\n  const setSearchTerm = (term) => {\r\n    dispatch({ type: ACTIONS.SET_SEARCH, payload: term });\r\n  };\r\n\r\n  const setSelectedSpecialty = (specialty) => {\r\n    dispatch({ type: ACTIONS.SET_SPECIALTY, payload: specialty });\r\n  };\r\n\r\n  const setTodayOnly = (value) => {\r\n    dispatch({ type: ACTIONS.SET_TODAY_ONLY, payload: value });\r\n  };\r\n\r\n  const setCurrentPage = (page) => {\r\n    dispatch({ type: ACTIONS.SET_PAGE, payload: page });\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setSearchTerm('');\r\n    setSelectedSpecialty('All');\r\n    setTodayOnly(false);\r\n  };\r\n\r\n  // Calculate current page doctors\r\n  const indexOfLastDoctor = state.currentPage * state.doctorsPerPage;\r\n  const indexOfFirstDoctor = indexOfLastDoctor - state.doctorsPerPage;\r\n  const currentDoctors = state.filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n\r\n  const value = {\r\n    ...state,\r\n    currentDoctors,\r\n    indexOfFirstDoctor,\r\n    indexOfLastDoctor,\r\n    setSearchTerm,\r\n    setSelectedSpecialty,\r\n    setTodayOnly,\r\n    setCurrentPage,\r\n    resetFilters\r\n  };\r\n\r\n  return (\r\n    <DoctorsContext.Provider value={value}>\r\n      {children}\r\n    </DoctorsContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the doctors context\r\nconst useDoctors = () => {\r\n  const context = useContext(DoctorsContext);\r\n  if (context === undefined) {\r\n    throw new Error('useDoctors must be used within a DoctorsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Doctor Card Component\r\nconst DoctorCard = ({ doctor }) => {\r\n  const [imageError, setImageError] = useState(false);\r\n  const isAvailable = isAvailableToday(doctor.availability);\r\n  \r\n  const placeholderUrl = `/api/placeholder/${300 + (doctor.id % 5) * 20}/${400 + (doctor.id % 3) * 20}`;\r\n  \r\n  const experienceText = doctor.experience === 1 \r\n    ? \"1 year experience\" \r\n    : `${doctor.experience} years experience`;\r\n    \r\n  const appointmentCount = doctor.appointments ? doctor.appointments.length : 0;\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden transition-transform duration-200 hover:shadow-lg hover:translate-y-1 flex flex-col h-full\">\r\n      <div className=\"relative\">\r\n        <img\r\n          src={imageError ? placeholderUrl : doctor.image || placeholderUrl}\r\n          alt={`Dr. ${doctor.name}`}\r\n          className=\"w-full h-64 object-cover object-center\"\r\n          onError={() => setImageError(true)}\r\n        />\r\n        <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-t from-black/60 to-transparent opacity-60\"></div>\r\n        \r\n        <div className=\"absolute top-3 right-3 flex flex-col gap-2\">\r\n          {isAvailable && (\r\n            <span className=\"bg-green-500 text-white text-xs font-bold px-2 py-1 rounded-full flex items-center\">\r\n              <Clock className=\"w-3 h-3 mr-1\" />\r\n              Available Today\r\n            </span>\r\n          )}\r\n          {doctor.experience > 15 && (\r\n            <span className=\"bg-blue-600 text-white text-xs font-bold px-2 py-1 rounded-full flex items-center\">\r\n              <Award className=\"w-3 h-3 mr-1\" />\r\n              Senior Expert\r\n            </span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"absolute bottom-3 left-3\">\r\n          <span className=\"inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full font-semibold\">\r\n            {doctor.specialization}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"p-5 flex-grow flex flex-col\">\r\n        <div className=\"flex justify-between items-start mb-3\">\r\n          <h2 className=\"text-xl font-bold text-gray-800\">{doctor.name}</h2>\r\n          <div className=\"flex items-center bg-yellow-50 px-2 py-1 rounded\">\r\n            <Star className=\"w-4 h-4 text-yellow-400 fill-current\" />\r\n            <span className=\"ml-1 text-sm font-medium\">\r\n              {(4 + ((doctor.id * 0.1) % 1)).toFixed(1)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-start mb-3\">\r\n          <MapPin className=\"w-4 h-4 text-gray-500 mt-1 flex-shrink-0\" />\r\n          <p className=\"text-gray-600 text-sm ml-2\">{doctor.clinicAddress}</p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center text-gray-500 text-sm mb-4\">\r\n          <Clock className=\"w-4 h-4 mr-1 flex-shrink-0\" />\r\n          <span className=\"truncate\">{getAvailabilityText(doctor.availability)}</span>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-3 mb-4 mt-auto\">\r\n          <div className=\"flex items-center px-3 py-1 bg-gray-100 rounded-full\">\r\n            <span className=\"text-gray-700 text-sm font-medium\">{experienceText}</span>\r\n          </div>\r\n          {appointmentCount > 0 && (\r\n            <div className=\"flex items-center px-3 py-1 bg-gray-100 rounded-full\">\r\n              <Users className=\"w-4 h-4 mr-1 text-gray-600\" />\r\n              <span className=\"text-gray-700 text-sm font-medium\">{appointmentCount} patients</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <button className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-3 rounded-md font-medium transition-colors flex items-center justify-center w-full\">\r\n          <Calendar className=\"w-4 h-4 mr-2\" />\r\n          Book Appointment\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Search Filters Component\r\nconst SearchFilters = () => {\r\n  const { \r\n    searchTerm, \r\n    selectedSpecialty, \r\n    todayOnly, \r\n    specialties,\r\n    setSearchTerm, \r\n    setSelectedSpecialty, \r\n    setTodayOnly \r\n  } = useDoctors();\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n      <div className=\"flex flex-col md:flex-row gap-4\">\r\n        <div className=\"relative flex-grow\">\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n            <Search className=\"w-5 h-5 text-gray-400\" />\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by name or specialty...\"\r\n            className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"relative w-full md:w-64\">\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n            <Filter className=\"w-5 h-5 text-gray-400\" />\r\n          </div>\r\n          <select\r\n            className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 appearance-none\"\r\n            value={selectedSpecialty}\r\n            onChange={(e) => setSelectedSpecialty(e.target.value)}\r\n          >\r\n            {specialties.map((specialty) => (\r\n              <option key={specialty} value={specialty}>\r\n                {specialty}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"availableToday\"\r\n            className=\"mr-2 h-5 w-5 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n            checked={todayOnly}\r\n            onChange={() => setTodayOnly(!todayOnly)}\r\n          />\r\n          <label htmlFor=\"availableToday\" className=\"text-sm text-gray-700\">\r\n            Available Today\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Results Display Component\r\nconst ResultsDisplay = () => {\r\n  const { \r\n    currentDoctors, \r\n    filteredDoctors, \r\n    indexOfFirstDoctor, \r\n    indexOfLastDoctor,\r\n    resetFilters \r\n  } = useDoctors();\r\n  \r\n  const totalDoctors = filteredDoctors.length;\r\n\r\n  if (totalDoctors === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\r\n        <p className=\"text-gray-600 mb-4\">No doctors match your search criteria</p>\r\n        <button \r\n          className=\"text-blue-600 font-medium hover:text-blue-800\"\r\n          onClick={resetFilters}\r\n        >\r\n          Clear all filters\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-4 text-gray-600 flex items-center\">\r\n        <span className=\"font-medium mr-2\">Results:</span>\r\n        Showing {totalDoctors > 0 ? Math.min(totalDoctors, indexOfFirstDoctor + 1) : 0}-{Math.min(indexOfLastDoctor, totalDoctors)} of {totalDoctors} doctors\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n        {currentDoctors.map((doctor) => (\r\n          <DoctorCard key={doctor.id} doctor={doctor} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Pagination Component\r\nconst Pagination = () => {\r\n  const { \r\n    currentPage, \r\n    totalPages, \r\n    filteredDoctors,\r\n    setCurrentPage \r\n  } = useDoctors();\r\n  \r\n  const totalDoctors = filteredDoctors.length;\r\n\r\n  if (totalDoctors === 0) {\r\n    return null;\r\n  }\r\n\r\n  const nextPage = () => {\r\n    if (currentPage < totalPages) setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-between items-center mt-12 bg-white p-4 rounded-lg shadow-sm\">\r\n      <span className=\"text-sm text-gray-600 font-medium\">\r\n        Page {currentPage} of {totalPages}\r\n      </span>\r\n      \r\n      <div className=\"flex space-x-2\">\r\n        <button\r\n          onClick={prevPage}\r\n          disabled={currentPage === 1}\r\n          className=\"flex items-center justify-center w-10 h-10 rounded-md border border-gray-300 bg-white text-gray-700 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\r\n        >\r\n          <ChevronLeft className=\"w-5 h-5\" />\r\n        </button>\r\n        \r\n        <div className=\"hidden md:flex space-x-1\">\r\n          {[...Array(Math.min(5, totalPages))].map((_, i) => {\r\n            // Logic to show pages around current page\r\n            let pageNum;\r\n            if (totalPages <= 5) {\r\n              pageNum = i + 1;\r\n            } else if (currentPage <= 3) {\r\n              pageNum = i + 1;\r\n            } else if (currentPage >= totalPages - 2) {\r\n              pageNum = totalPages - 4 + i;\r\n            } else {\r\n              pageNum = currentPage - 2 + i;\r\n            }\r\n            \r\n            return (\r\n              <button\r\n                key={pageNum}\r\n                onClick={() => setCurrentPage(pageNum)}\r\n                className={`w-10 h-10 rounded-md ${\r\n                  currentPage === pageNum\r\n                    ? 'bg-blue-600 text-white'\r\n                    : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                {pageNum}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        \r\n        <button\r\n          onClick={nextPage}\r\n          disabled={currentPage === totalPages}\r\n          className=\"flex items-center justify-center w-10 h-10 rounded-md border border-gray-300 bg-white text-gray-700 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\r\n        >\r\n          <ChevronRight className=\"w-5 h-5\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Page Component\r\nconst DoctorsPage = () => {\r\n  return (\r\n    <DoctorsProvider>\r\n      <div className=\"bg-gray-50 min-h-screen\">\r\n        <div className=\"container max-w-[1400px] mx-auto px-4 py-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Find Your Doctor</h1>\r\n          <p className=\"text-gray-600 mb-8\">Book appointments with the best doctors in your area</p>\r\n          \r\n          <SearchFilters />\r\n          <ResultsDisplay />\r\n          <Pagination />\r\n        </div>\r\n      </div>\r\n    </DoctorsProvider>\r\n  );\r\n};\r\n\r\nexport default DoctorsPage;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 877, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}