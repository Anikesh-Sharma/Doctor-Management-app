{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anike/Desktop/Placements/DoctorManagement/doctor-appointment-app/src/components/ui/calendar.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport { DayPicker } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"p-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row gap-2\",\r\n        month: \"flex flex-col gap-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center w-full\",\r\n        caption_label: \"text-sm font-medium\",\r\n        nav: \"flex items-center gap-1\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"size-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-x-1\",\r\n        head_row: \"flex\",\r\n        head_cell:\r\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: cn(\r\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-range-end)]:rounded-r-md\",\r\n          props.mode === \"range\"\r\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\r\n            : \"[&:has([aria-selected])]:rounded-md\"\r\n        ),\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"size-8 p-0 font-normal aria-selected:opacity-100\"\r\n        ),\r\n        day_range_start:\r\n          \"day-range-start aria-selected:bg-primary aria-selected:text-primary-foreground\",\r\n        day_range_end:\r\n          \"day-range-end aria-selected:bg-primary aria-selected:text-primary-foreground\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground aria-selected:text-muted-foreground\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: ({ className, ...props }) => (\r\n          <ChevronLeft className={cn(\"size-4\", className)} {...props} />\r\n        ),\r\n        IconRight: ({ className, ...props }) => (\r\n          <ChevronRight className={cn(\"size-4\", className)} {...props} />\r\n        ),\r\n      }}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Calendar }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;;AASA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACJ;IACC,qBACG,8OAAC,8JAAA,CAAA,YAAS;QACT,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACL,mKACA,MAAM,IAAI,KAAK,UACX,yKACA;YAEN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,iBACE;YACF,eACE;YACF,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,UAAU;oBAAa,GAAG,KAAK;;;;;;YAE5D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,UAAU;oBAAa,GAAG,KAAK;;;;;;QAE/D;QACC,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anike/Desktop/Placements/DoctorManagement/doctor-appointment-app/src/components/ui/popover.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Popover({\r\n  ...props\r\n}) {\r\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\r\n}\r\n\r\nfunction PopoverTrigger({\r\n  ...props\r\n}) {\r\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\r\n}\r\n\r\nfunction PopoverContent({\r\n  className,\r\n  align = \"center\",\r\n  sideOffset = 4,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<PopoverPrimitive.Portal>\r\n      <PopoverPrimitive.Content\r\n        data-slot=\"popover-content\"\r\n        align={align}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 rounded-md border p-4 shadow-md outline-hidden\",\r\n          className\r\n        )}\r\n        {...props} />\r\n    </PopoverPrimitive.Portal>)\r\n  );\r\n}\r\n\r\nfunction PopoverAnchor({\r\n  ...props\r\n}) {\r\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\r\n}\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,QAAQ,EACf,GAAG,OACJ;IACC,qBAAO,8OAAC,mKAAA,CAAA,OAAqB;QAAC,aAAU;QAAW,GAAG,KAAK;;;;;;AAC7D;AAEA,SAAS,eAAe,EACtB,GAAG,OACJ;IACC,qBAAO,8OAAC,mKAAA,CAAA,UAAwB;QAAC,aAAU;QAAmB,GAAG,KAAK;;;;;;AACxE;AAEA,SAAS,eAAe,EACtB,SAAS,EACT,QAAQ,QAAQ,EAChB,aAAa,CAAC,EACd,GAAG,OACJ;IACC,qBACG,8OAAC,mKAAA,CAAA,SAAuB;kBACvB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,aAAU;YACV,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gbACA;YAED,GAAG,KAAK;;;;;;;;;;;AAGjB;AAEA,SAAS,cAAc,EACrB,GAAG,OACJ;IACC,qBAAO,8OAAC,mKAAA,CAAA,SAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anike/Desktop/Placements/DoctorManagement/doctor-appointment-app/src/components/ui/textarea.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Textarea({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<textarea\r\n      data-slot=\"textarea\"\r\n      className={cn(\r\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sbACA;QAED,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anike/Desktop/Placements/DoctorManagement/doctor-appointment-app/src/app/_components/DoctorData.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\nimport { Calendar, Clock, User, Mail, Phone, MessageSquare, Award, Users, Star, MapPin, ChevronLeft, ChevronRight, Filter, Search } from 'lucide-react';\r\nimport { format } from 'date-fns';\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Calendar as CalendarComponent } from \"@/components/ui/calendar\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { createContext, useContext, useEffect, useReducer } from 'react';\r\nimport doctorsData from '../data.json';\r\n\r\n// ======================================================================\r\n// For testing: simulate a particular day for \"Available Today\" check.\r\n// Comment out or remove the following line in production to use the actual current day.\r\nconst TEST_DATE = new Date('2025-03-10'); // Monday\r\n// ======================================================================\r\n\r\n// Create context for doctors data\r\nconst DoctorsContext = createContext();\r\n\r\n// Action types\r\nconst ACTIONS = {\r\n  INITIALIZE: 'initialize',\r\n  FILTER_DOCTORS: 'filter_doctors',\r\n  SET_SEARCH: 'set_search',\r\n  SET_SPECIALTY: 'set_specialty',\r\n  SET_TODAY_ONLY: 'set_today_only',\r\n  SET_PAGE: 'set_page',\r\n  ADD_APPOINTMENT: 'add_appointment'\r\n};\r\n\r\n// Updated helper function for checking availability today.\r\n// It uses the TEST_DATE (if defined) to simulate a specific day.\r\nconst isAvailableToday = (availabilityArray, testDate = TEST_DATE || new Date()) => {\r\n  if (!availabilityArray || !Array.isArray(availabilityArray) || availabilityArray.length === 0) {\r\n    return false;\r\n  }\r\n  \r\n  const days = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n  const today = days[testDate.getDay()];\r\n\r\n  // Map full day names to potential abbreviations\r\n  const dayMapping = {\r\n    sunday: ['sunday', 'sun'],\r\n    monday: ['monday', 'mon'],\r\n    tuesday: ['tuesday', 'tue', 'tues'],\r\n    wednesday: ['wednesday', 'wed'],\r\n    thursday: ['thursday', 'thu', 'thurs'],\r\n    friday: ['friday', 'fri'],\r\n    saturday: ['saturday', 'sat']\r\n  };\r\n\r\n  return availabilityArray.some(slot => {\r\n    if (!slot.day) return false;\r\n    const slotDay = slot.day.toLowerCase();\r\n    return dayMapping[today].includes(slotDay);\r\n  });\r\n};\r\n\r\nconst getAvailabilityText = (availability) => {\r\n  if (!availability || !Array.isArray(availability) || availability.length === 0) {\r\n    return \"No availability information\";\r\n  }\r\n  \r\n  return availability.map(slot => `${slot.day}s: ${slot.startTime}-${slot.endTime}`).join(', ');\r\n};\r\n\r\n// Appointment Modal Component\r\nconst AppointmentModal = ({ doctor, isOpen, onClose }) => {\r\n  // Use TEST_DATE as the initial date for testing purposes.\r\n  const [date, setDate] = useState(TEST_DATE || new Date());\r\n  const [time, setTime] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    contact: '',\r\n    description: ''\r\n  });\r\n\r\n  // Get the addAppointment function from context\r\n  const { addAppointment } = useDoctors();\r\n\r\n  // Updated available time slots function using testDate (passed as parameter).\r\n  const getAvailableTimeSlots = () => {\r\n    if (!doctor || !doctor.availability) return [];\r\n    \r\n    const days = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n    const todayLower = days[date.getDay()];\r\n    \r\n    // Find available slot using a case-insensitive check\r\n    const availableSlot = doctor.availability.find(slot => slot.day && slot.day.toLowerCase() === todayLower);\r\n    if (!availableSlot) return [];\r\n    \r\n    // Convert availability times to 30-minute interval slots\r\n    const slots = [];\r\n    const [startHour, startMinute] = availableSlot.startTime.split(':').map(Number);\r\n    const [endHour, endMinute] = availableSlot.endTime.split(':').map(Number);\r\n    \r\n    let currentHour = startHour;\r\n    let currentMinute = startMinute;\r\n    \r\n    while (currentHour < endHour || (currentHour === endHour && currentMinute < endMinute)) {\r\n      const formattedHour = currentHour.toString().padStart(2, '0');\r\n      const formattedMinute = currentMinute.toString().padStart(2, '0');\r\n      slots.push(`${formattedHour}:${formattedMinute}`);\r\n      \r\n      currentMinute += 30;\r\n      if (currentMinute >= 60) {\r\n        currentHour += 1;\r\n        currentMinute = 0;\r\n      }\r\n    }\r\n    \r\n    return slots;\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Form validation\r\n    if (!formData.name || !formData.email || !formData.contact || !date || !time) {\r\n      alert(\"Please fill all required fields\");\r\n      return;\r\n    }\r\n    \r\n    // Create booking data\r\n    const bookingData = {\r\n      ...formData,\r\n      doctorId: doctor.id,\r\n      doctorName: doctor.name,\r\n      appointmentDate: format(date, 'PP'),\r\n      appointmentTime: time,\r\n    };\r\n    \r\n    console.log(\"Appointment booked:\", bookingData);\r\n    \r\n    // Dispatch the appointment to update the doctor's appointments in context\r\n    addAppointment(doctor.id, bookingData);\r\n    \r\n    // Also store the appointment in localStorage (for example purposes)\r\n    const storedAppointments = JSON.parse(localStorage.getItem('appointments')) || [];\r\n    storedAppointments.push(bookingData);\r\n    localStorage.setItem('appointments', JSON.stringify(storedAppointments));\r\n    \r\n    // Close modal and reset form\r\n    onClose();\r\n    setFormData({\r\n      name: '',\r\n      email: '',\r\n      contact: '',\r\n      description: ''\r\n    });\r\n    setDate(TEST_DATE || new Date());\r\n    setTime('');\r\n  };\r\n\r\n  const availableTimeSlots = getAvailableTimeSlots();\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-[500px]\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"text-2xl font-bold text-gray-800 flex items-center\">\r\n            <Calendar className=\"w-5 h-5 mr-2 text-blue-600\" />\r\n            Book Appointment\r\n          </DialogTitle>\r\n          <DialogDescription>\r\n            {doctor ? (\r\n              <>\r\n                <span className=\"block mt-2 font-medium text-gray-700\">Dr. {doctor.name}</span>\r\n                <span className=\"block text-gray-500 text-sm\">{doctor.specialization}</span>\r\n              </>\r\n            ) : (\r\n              <span className=\"block mt-2 text-gray-500\">Complete the form to book your appointment</span>\r\n            )}\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"grid gap-4 py-4\">\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"name\" className=\"text-right\">\r\n                <User className=\"h-4 w-4 text-gray-500 inline mr-1\" />\r\n                Name\r\n              </Label>\r\n              <Input\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                className=\"col-span-3\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"email\" className=\"text-right\">\r\n                <Mail className=\"h-4 w-4 text-gray-500 inline mr-1\" />\r\n                Email\r\n              </Label>\r\n              <Input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                className=\"col-span-3\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"contact\" className=\"text-right\">\r\n                <Phone className=\"h-4 w-4 text-gray-500 inline mr-1\" />\r\n                Contact\r\n              </Label>\r\n              <Input\r\n                id=\"contact\"\r\n                name=\"contact\"\r\n                value={formData.contact}\r\n                onChange={handleInputChange}\r\n                className=\"col-span-3\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label className=\"text-right\">\r\n                <Calendar className=\"h-4 w-4 text-gray-500 inline mr-1\" />\r\n                Date\r\n              </Label>\r\n              <div className=\"col-span-3\">\r\n                <Popover>\r\n                  <PopoverTrigger asChild>\r\n                    <Button\r\n                      variant=\"outline\"\r\n                      className={cn(\r\n                        \"w-full justify-start text-left font-normal\",\r\n                        !date && \"text-gray-500\"\r\n                      )}\r\n                    >\r\n                      {date ? format(date, 'PPP') : <span>Select date</span>}\r\n                    </Button>\r\n                  </PopoverTrigger>\r\n                  <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n                    <CalendarComponent\r\n                      mode=\"single\"\r\n                      selected={date}\r\n                      onSelect={setDate}\r\n                      initialFocus\r\n                      disabled={(date) => {\r\n                        const today = new Date();\r\n                        today.setHours(0, 0, 0, 0);\r\n                        return date < today;\r\n                      }}\r\n                    />\r\n                  </PopoverContent>\r\n                </Popover>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label className=\"text-right\">\r\n                <Clock className=\"h-4 w-4 text-gray-500 inline mr-1\" />\r\n                Time\r\n              </Label>\r\n              <div className=\"col-span-3\">\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {availableTimeSlots.length > 0 ? (\r\n                    availableTimeSlots.map((slot) => (\r\n                      <Button\r\n                        key={slot}\r\n                        type=\"button\"\r\n                        variant={time === slot ? \"default\" : \"outline\"}\r\n                        className={cn(\r\n                          \"px-3 py-1 h-auto text-sm\",\r\n                          time === slot ? \"bg-blue-600\" : \"hover:bg-blue-50\"\r\n                        )}\r\n                        onClick={() => setTime(slot)}\r\n                      >\r\n                        {slot}\r\n                      </Button>\r\n                    ))\r\n                  ) : (\r\n                    <span className=\"text-sm text-gray-500\">No available slots for the selected date</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"description\" className=\"text-right\">\r\n                <MessageSquare className=\"h-4 w-4 text-gray-500 inline mr-1\" />\r\n                Notes\r\n              </Label>\r\n              <Textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Describe your symptoms or reason for visit\"\r\n                className=\"col-span-3\"\r\n                rows={3}\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <DialogFooter>\r\n            <Button \r\n              type=\"button\" \r\n              variant=\"outline\" \r\n              onClick={onClose}\r\n              className=\"border-gray-300 text-gray-700 hover:bg-gray-50\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              type=\"submit\" \r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n            >\r\n              Confirm Booking\r\n            </Button>\r\n          </DialogFooter>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\n// Doctor Card Component\r\nconst DoctorCard = ({ doctor }) => {\r\n  const [imageError, setImageError] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  // Use the simulated TEST_DATE so that the \"Available Today\" badge reflects Monday availability.\r\n  const isAvailable = isAvailableToday(doctor.availability);\r\n  \r\n  const placeholderUrl = `/api/placeholder/${300 + (doctor.id % 5) * 20}/${400 + (doctor.id % 3) * 20}`;\r\n  \r\n  const experienceText = doctor.experience === 1 \r\n    ? \"1 year experience\" \r\n    : `${doctor.experience} years experience`;\r\n    \r\n  const appointmentCount = doctor.appointments ? doctor.appointments.length : 0;\r\n\r\n  // Check if user is logged in from local storage.\r\n  const handleBookAppointment = () => {\r\n    const user = localStorage.getItem('user');\r\n    if (user) {\r\n      setShowModal(true);\r\n    } else {\r\n      alert(\"Please login first to book an appointment\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden transition-transform duration-200 hover:shadow-lg hover:translate-y-1 flex flex-col h-full\">\r\n        <div className=\"relative\">\r\n          <img\r\n            src={imageError ? placeholderUrl : doctor.image || placeholderUrl}\r\n            alt={`Dr. ${doctor.name}`}\r\n            className=\"w-full h-64 object-cover object-center\"\r\n            onError={() => setImageError(true)}\r\n          />\r\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-t from-black/60 to-transparent opacity-60\"></div>\r\n          \r\n          <div className=\"absolute top-3 right-3 flex flex-col gap-2\">\r\n            {isAvailable && (\r\n              <span className=\"bg-green-500 text-white text-xs font-bold px-2 py-1 rounded-full flex items-center\">\r\n                <Clock className=\"w-3 h-3 mr-1\" />\r\n                Available Today\r\n              </span>\r\n            )}\r\n            {doctor.experience > 15 && (\r\n              <span className=\"bg-blue-600 text-white text-xs font-bold px-2 py-1 rounded-full flex items-center\">\r\n                <Award className=\"w-3 h-3 mr-1\" />\r\n                Senior Expert\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"absolute bottom-3 left-3\">\r\n            <span className=\"inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full font-semibold\">\r\n              {doctor.specialization}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"p-5 flex-grow flex flex-col\">\r\n          <div className=\"flex justify-between items-start mb-3\">\r\n            <h2 className=\"text-xl font-bold text-gray-800\">{doctor.name}</h2>\r\n            <div className=\"flex items-center bg-yellow-50 px-2 py-1 rounded\">\r\n              <Star className=\"w-4 h-4 text-yellow-400 fill-current\" />\r\n              <span className=\"ml-1 text-sm font-medium\">\r\n                {(4 + ((doctor.id * 0.1) % 1)).toFixed(1)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-start mb-3\">\r\n            <MapPin className=\"w-4 h-4 text-gray-500 mt-1 flex-shrink-0\" />\r\n            <p className=\"text-gray-600 text-sm ml-2\">{doctor.clinicAddress}</p>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center text-gray-500 text-sm mb-4\">\r\n            <Clock className=\"w-4 h-4 mr-1 flex-shrink-0\" />\r\n            <span className=\"truncate\">{getAvailabilityText(doctor.availability)}</span>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center space-x-3 mb-4 mt-auto\">\r\n            <div className=\"flex items-center px-3 py-1 bg-gray-100 rounded-full\">\r\n              <span className=\"text-gray-700 text-sm font-medium\">{experienceText}</span>\r\n            </div>\r\n            {appointmentCount > 0 && (\r\n              <div className=\"flex items-center px-3 py-1 bg-gray-100 rounded-full\">\r\n                <Users className=\"w-4 h-4 mr-1 text-gray-600\" />\r\n                <span className=\"text-gray-700 text-sm font-medium\">{appointmentCount} patients</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <button \r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-3 rounded-md font-medium transition-colors flex items-center justify-center w-full\"\r\n            onClick={handleBookAppointment}\r\n          >\r\n            <Calendar className=\"w-4 h-4 mr-2\" />\r\n            Book Appointment\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Appointment Modal: It will only open if the user is logged in */}\r\n      <AppointmentModal \r\n        doctor={doctor} \r\n        isOpen={showModal} \r\n        onClose={() => setShowModal(false)} \r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// Provider component\r\nconst DoctorsProvider = ({ children }) => {\r\n  const initialState = {\r\n    allDoctors: [],\r\n    filteredDoctors: [],\r\n    specialties: ['All'],\r\n    searchTerm: '',\r\n    selectedSpecialty: 'All',\r\n    todayOnly: false,\r\n    currentPage: 1,\r\n    doctorsPerPage: 9,\r\n    totalPages: 0\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(doctorsReducer, initialState);\r\n\r\n  // Reducer function for doctors state\r\n  function doctorsReducer(state, action) {\r\n    switch (action.type) {\r\n      case ACTIONS.INITIALIZE:\r\n        return {\r\n          ...state,\r\n          allDoctors: action.payload,\r\n          filteredDoctors: action.payload,\r\n          specialties: ['All', ...new Set(action.payload.map(doctor => doctor.specialization))]\r\n        };\r\n      case ACTIONS.FILTER_DOCTORS:\r\n        const filteredDocs = state.allDoctors.filter(doctor => {\r\n          const matchesSearch = doctor.name.toLowerCase().includes(state.searchTerm.toLowerCase()) ||\r\n                               doctor.specialization.toLowerCase().includes(state.searchTerm.toLowerCase());\r\n          const matchesSpecialty = state.selectedSpecialty === 'All' || doctor.specialization === state.selectedSpecialty;\r\n          // Use the test date for filtering to simulate \"Available Today\"\r\n          const matchesAvailability = !state.todayOnly || isAvailableToday(doctor.availability);\r\n          return matchesSearch && matchesSpecialty && matchesAvailability;\r\n        });\r\n        \r\n        return {\r\n          ...state,\r\n          filteredDoctors: filteredDocs,\r\n          currentPage: 1,\r\n          totalPages: Math.ceil(filteredDocs.length / state.doctorsPerPage)\r\n        };\r\n      case ACTIONS.SET_SEARCH:\r\n        return {\r\n          ...state,\r\n          searchTerm: action.payload\r\n        };\r\n      case ACTIONS.SET_SPECIALTY:\r\n        return {\r\n          ...state,\r\n          selectedSpecialty: action.payload\r\n        };\r\n      case ACTIONS.SET_TODAY_ONLY:\r\n        return {\r\n          ...state,\r\n          todayOnly: action.payload\r\n        };\r\n      case ACTIONS.SET_PAGE:\r\n        return {\r\n          ...state,\r\n          currentPage: action.payload\r\n        };\r\n      case ACTIONS.ADD_APPOINTMENT:\r\n        const { doctorId, appointment } = action.payload;\r\n        const updateDoctorAppointments = (doctors) => doctors.map(doctor => {\r\n          if (doctor.id === doctorId) {\r\n            return { \r\n              ...doctor, \r\n              appointments: doctor.appointments \r\n                ? [...doctor.appointments, appointment] \r\n                : [appointment] \r\n            };\r\n          }\r\n          return doctor;\r\n        });\r\n        return {\r\n          ...state,\r\n          allDoctors: updateDoctorAppointments(state.allDoctors),\r\n          filteredDoctors: updateDoctorAppointments(state.filteredDoctors)\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  // Initialize data from JSON\r\n  useEffect(() => {\r\n    dispatch({ type: ACTIONS.INITIALIZE, payload: doctorsData.doctors });\r\n    dispatch({ type: ACTIONS.FILTER_DOCTORS });\r\n  }, []);\r\n\r\n  // Apply filters when filter criteria change\r\n  useEffect(() => {\r\n    dispatch({ type: ACTIONS.FILTER_DOCTORS });\r\n  }, [state.searchTerm, state.selectedSpecialty, state.todayOnly]);\r\n\r\n  // Actions for state updates\r\n  const setSearchTerm = (term) => {\r\n    dispatch({ type: ACTIONS.SET_SEARCH, payload: term });\r\n  };\r\n\r\n  const setSelectedSpecialty = (specialty) => {\r\n    dispatch({ type: ACTIONS.SET_SPECIALTY, payload: specialty });\r\n  };\r\n\r\n  const setTodayOnly = (value) => {\r\n    dispatch({ type: ACTIONS.SET_TODAY_ONLY, payload: value });\r\n  };\r\n\r\n  const setCurrentPage = (page) => {\r\n    dispatch({ type: ACTIONS.SET_PAGE, payload: page });\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setSearchTerm('');\r\n    setSelectedSpecialty('All');\r\n    setTodayOnly(false);\r\n  };\r\n\r\n  // Function to add a new appointment\r\n  const addAppointment = (doctorId, appointment) => {\r\n    dispatch({ type: ACTIONS.ADD_APPOINTMENT, payload: { doctorId, appointment } });\r\n  };\r\n\r\n  // Calculate current page doctors\r\n  const indexOfLastDoctor = state.currentPage * state.doctorsPerPage;\r\n  const indexOfFirstDoctor = indexOfLastDoctor - state.doctorsPerPage;\r\n  const currentDoctors = state.filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n\r\n  const value = {\r\n    ...state,\r\n    currentDoctors,\r\n    indexOfFirstDoctor,\r\n    indexOfLastDoctor,\r\n    setSearchTerm,\r\n    setSelectedSpecialty,\r\n    setTodayOnly,\r\n    setCurrentPage,\r\n    resetFilters,\r\n    addAppointment\r\n  };\r\n\r\n  return (\r\n    <DoctorsContext.Provider value={value}>\r\n      {children}\r\n    </DoctorsContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the doctors context\r\nconst useDoctors = () => {\r\n  const context = useContext(DoctorsContext);\r\n  if (context === undefined) {\r\n    throw new Error('useDoctors must be used within a DoctorsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Search Filters Component\r\nconst SearchFilters = () => {\r\n  const { \r\n    searchTerm, \r\n    selectedSpecialty, \r\n    todayOnly, \r\n    specialties,\r\n    setSearchTerm, \r\n    setSelectedSpecialty, \r\n    setTodayOnly \r\n  } = useDoctors();\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n      <div className=\"flex flex-col md:flex-row gap-4\">\r\n        <div className=\"relative flex-grow\">\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n            <Search className=\"w-5 h-5 text-gray-400\" />\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by name or specialty...\"\r\n            className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"relative w-full md:w-64\">\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n            <Filter className=\"w-5 h-5 text-gray-400\" />\r\n          </div>\r\n          <select\r\n            className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 appearance-none\"\r\n            value={selectedSpecialty}\r\n            onChange={(e) => setSelectedSpecialty(e.target.value)}\r\n          >\r\n            {specialties.map((specialty) => (\r\n              <option key={specialty} value={specialty}>\r\n                {specialty}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"availableToday\"\r\n            className=\"mr-2 h-5 w-5 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n            checked={todayOnly}\r\n            onChange={() => setTodayOnly(!todayOnly)}\r\n          />\r\n          <label htmlFor=\"availableToday\" className=\"text-sm text-gray-700\">\r\n            Available Today\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Results Display Component\r\nconst ResultsDisplay = () => {\r\n  const { \r\n    currentDoctors, \r\n    filteredDoctors, \r\n    indexOfFirstDoctor, \r\n    indexOfLastDoctor,\r\n    resetFilters \r\n  } = useDoctors();\r\n  \r\n  const totalDoctors = filteredDoctors.length;\r\n\r\n  if (totalDoctors === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\r\n        <p className=\"text-gray-600 mb-4\">No doctors match your search criteria</p>\r\n        <button \r\n          className=\"text-blue-600 font-medium hover:text-blue-800\"\r\n          onClick={resetFilters}\r\n        >\r\n          Clear all filters\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-4 text-gray-600 flex items-center\">\r\n        <span className=\"font-medium mr-2\">Results:</span>\r\n        Showing {totalDoctors > 0 ? Math.min(totalDoctors, indexOfFirstDoctor + 1) : 0}-{Math.min(indexOfLastDoctor, totalDoctors)} of {totalDoctors} doctors\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n        {currentDoctors.map((doctor) => (\r\n          <DoctorCard key={doctor.id} doctor={doctor} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Pagination Component\r\nconst Pagination = () => {\r\n  const { \r\n    currentPage, \r\n    totalPages, \r\n    filteredDoctors,\r\n    setCurrentPage \r\n  } = useDoctors();\r\n  \r\n  const totalDoctors = filteredDoctors.length;\r\n\r\n  if (totalDoctors === 0) {\r\n    return null;\r\n  }\r\n\r\n  const nextPage = () => {\r\n    if (currentPage < totalPages) setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-between items-center mt-12 bg-white p-4 rounded-lg shadow-sm\">\r\n      <span className=\"text-sm text-gray-600 font-medium\">\r\n        Page {currentPage} of {totalPages}\r\n      </span>\r\n      \r\n      <div className=\"flex space-x-2\">\r\n        <button\r\n          onClick={prevPage}\r\n          disabled={currentPage === 1}\r\n          className=\"flex items-center justify-center w-10 h-10 rounded-md border border-gray-300 bg-white text-gray-700 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\r\n        >\r\n          <ChevronLeft className=\"w-5 h-5\" />\r\n        </button>\r\n        \r\n        <div className=\"hidden md:flex space-x-1\">\r\n          {[...Array(Math.min(5, totalPages))].map((_, i) => {\r\n            let pageNum;\r\n            if (totalPages <= 5) {\r\n              pageNum = i + 1;\r\n            } else if (currentPage <= 3) {\r\n              pageNum = i + 1;\r\n            } else if (currentPage >= totalPages - 2) {\r\n              pageNum = totalPages - 4 + i;\r\n            } else {\r\n              pageNum = currentPage - 2 + i;\r\n            }\r\n            \r\n            return (\r\n              <button\r\n                key={pageNum}\r\n                onClick={() => setCurrentPage(pageNum)}\r\n                className={`w-10 h-10 rounded-md ${\r\n                  currentPage === pageNum\r\n                    ? 'bg-blue-600 text-white'\r\n                    : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                {pageNum}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        \r\n        <button\r\n          onClick={nextPage}\r\n          disabled={currentPage === totalPages}\r\n          className=\"flex items-center justify-center w-10 h-10 rounded-md border border-gray-300 bg-white text-gray-700 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\r\n        >\r\n          <ChevronRight className=\"w-5 h-5\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Page Component\r\nconst DoctorsPage = () => {\r\n  return (\r\n    <DoctorsProvider>\r\n      <div className=\"bg-gray-50 min-h-screen\">\r\n        <div className=\"container max-w-[1400px] mx-auto px-4 py-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Find Your Doctor</h1>\r\n          <p className=\"text-gray-600 mb-8\">Book appointments with the best doctors in your area</p>\r\n          \r\n          <SearchFilters />\r\n          <ResultsDisplay />\r\n          <Pagination />\r\n        </div>\r\n      </div>\r\n    </DoctorsProvider>\r\n  );\r\n};\r\n\r\nexport { DoctorCard, AppointmentModal, DoctorsPage, DoctorsProvider };\r\nexport default DoctorsPage;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1669, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1675, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anike/Desktop/Placements/DoctorManagement/doctor-appointment-app/src/app/doctors/page.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport DoctorData from \"@/app/_components/DoctorData\";\r\n\r\nexport default function DoctorsPage() {\r\n  return (\r\n    <main className=\"p-4\">\r\n      <h1 className=\"text-3xl font-bold text-gray-800 mb-6\">Our Doctors</h1>\r\n      {/* This component shows the doctor cards as seen on the main page */}\r\n      <DoctorData />\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAG,WAAU;0BAAwC;;;;;;0BAEtD,8OAAC,wIAAA,CAAA,UAAU;;;;;;;;;;;AAGjB","debugId":null}},
    {"offset": {"line": 1709, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}